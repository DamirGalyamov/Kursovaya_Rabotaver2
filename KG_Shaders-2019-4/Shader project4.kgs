<?xml version="1.0" encoding="utf-8"?>
<project vert=" varying vec2 texCoord;&#xD; varying vec3 Normal;&#xD; varying vec3 Position;&#xD; &#xD; uniform mat4 iModelViewMatrix;&#xD; uniform mat4 model;&#xD; &#xD; uniform vec3 iLightPos; &#xD; uniform vec3 iCamPos; &#xD; &#xD; varying vec3 iLightPos_mv;&#xD; varying vec3 iCamPos_mv;&#xD;&#xD;void main()&#xD;{&#xD;    gl_Position = gl_ProjectionMatrix * gl_ModelViewMatrix*vec4(gl_Vertex.xyz,1.0);&#xD;    Position = (gl_ModelViewMatrix*gl_Vertex).xyz;&#xD;    texCoord = gl_MultiTexCoord0.xy;&#xD;    Normal = (gl_NormalMatrix *gl_Normal).xyz;&#xD;    Normal = normalize(Normal);&#xD;    &#xD;    iLightPos_mv = (iModelViewMatrix*vec4(iLightPos,1.0)).xyz;    &#xD;    iCamPos_mv = (iModelViewMatrix*vec4(iCamPos,1.0)).xyz;&#xD;}" pix="#version 330 core&#xD;out vec4 FragColor;&#xD;&#xD;&#xD;&#xD;varying vec2 texCoord;&#xD;uniform sampler2D iTexture0;&#xD;uniform sampler2D iTexture1;&#xD;&#xD;uniform vec3 iLightPos;&#xD;uniform vec3 iCamPos;&#xD;varying vec3 iLightPos_mv;&#xD;varying vec3 iCamPos_mv;&#xD;varying vec3 Position;&#xD;&#xD;void main()&#xD;{           &#xD;     // obtain normal from normal map in range [0,1]&#xD;    vec3 normal = texture2D(iTexture1, texCoord).rgb;&#xD;    // transform normal vector to range [-1,1]&#xD;    normal = normalize(normal * 2.0 - 1.0);  // this normal is in tangent space&#xD;   &#x9;normal = normal * vec3(1,1,1);&#xD;    // get diffuse color&#xD;    vec3 color = texture2D(iTexture0, texCoord).rgb;&#xD;    // ambient&#xD;    vec3 ambient = 0.1 * color;&#xD;    // diffuse&#xD;    vec3 lightDir = normalize(iLightPos - Position);&#xD;    float diff = max(dot(lightDir, normal), 0.0);&#xD;    vec3 diffuse = diff * color;&#xD;    // specular&#xD;    vec3 viewDir = normalize(iCamPos - Position);&#xD;    vec3 reflectDir = reflect(-lightDir, normal);&#xD;    vec3 halfwayDir = normalize(lightDir + viewDir);  &#xD;    float spec = pow(max(dot(normal, halfwayDir), 0.0), 64.0);&#xD;&#xD;    vec3 specular = vec3(0.2) * spec;&#xD;    //FragColor = vec4(normal, 1.0);&#xD;    FragColor = vec4(ambient + diffuse + specular, 1.0);&#xD;}" tt0="1" t0="C:\Users\User\Downloads\12409-diffuse.jpg" tt1="1" t1="C:\Users\User\Downloads\Normal_map_example_-_Map.png" tt2="0" t2="" tt3="0" t3="" />